-- Criação da tabela SENSOR para armazenar informações sobre os sensores utilizados nas plantações
CREATE TABLE SENSOR (
    SEN_ID NUMBER GENERATED BY DEFAULT ON NULL AS IDENTITY PRIMARY KEY,  -- Corrigido o comando de geração de IDENTITY para Oracle
    SEN_TIPO VARCHAR2(100) NOT NULL,           -- Tipo de sensor (ex: umidade, pH, nutrientes)
    SEN_DESCRICAO VARCHAR2(100) NOT NULL     -- Descrição do tipo de sensor
);

-- Criação da tabela CULTURA para armazenar informações sobre as diferentes culturas plantadas
CREATE TABLE CULTURA (
    CUL_ID NUMBER GENERATED BY DEFAULT ON NULL AS IDENTITY PRIMARY KEY,  -- Corrigido o comando de geração de IDENTITY para Oracle
    CUL_NOME VARCHAR2(100) NOT NULL,          -- Nome da cultura (ex: milho, soja)
    CUL_HUMIDADE_MIN NUMBER NOT NULL,         -- Umidade mínima ideal para a cultura (FLOAT trocado para NUMBER, mais adequado para Oracle)
    CUL_HUMIDADE_MAX NUMBER NOT NULL,         -- Umidade máxima ideal para a cultura
    CUL_PH_MIN NUMBER NOT NULL,               -- pH mínimo ideal para a cultura
    CUL_PH_MAX NUMBER NOT NULL,               -- pH máximo ideal para a cultura
    CUL_N_MIN NUMBER NOT NULL,                -- Nível mínimo de nutrientes N necessários
    CUL_N_MAX NUMBER NOT NULL,                -- Nível máximo de nutrientes N necessários
    CUL_P_MIN NUMBER NOT NULL,                -- Nível mínimo de nutrientes P necessários
    CUL_P_MAX NUMBER NOT NULL,                -- Nível máximo de nutrientes P necessários
    CUL_K_MIN NUMBER NOT NULL,                -- Nível mínimo de nutrientes K necessários
    CUL_K_MAX NUMBER NOT NULL                 -- Nível máximo de nutrientes K necessários
);

-- Criação da tabela LEITURA_SENSOR para armazenar as leituras realizadas pelos sensores
CREATE TABLE LEITURA_SENSOR (
    LEI_ID NUMBER GENERATED BY DEFAULT ON NULL AS IDENTITY PRIMARY KEY,  -- Corrigido o comando de geração de IDENTITY para Oracle
    LEI_SENSOR_ID NUMBER NOT NULL,         -- Referência ao sensor que fez a leitura (chave estrangeira)
    LEI_CULTURA_ID NUMBER NOT NULL,        -- Referência à cultura relacionada à leitura (chave estrangeira)
    LEI_DATA_HORA TIMESTAMP NOT NULL,      -- Data e hora da leitura do sensor
    LEI_VALOR VARCHAR2(100) NOT NULL       -- Valor da leitura (Varchar porque a leitura do sensor NPK necessita ser vetorizada)
);

-- Definindo a relação entre LEITURA_SENSOR e SENSOR, garantindo integridade referencial
ALTER TABLE LEITURA_SENSOR 
ADD CONSTRAINT FK_LEI_SENSOR_ID FOREIGN KEY (LEI_SENSOR_ID)
REFERENCES SENSOR (SEN_ID)  -- LEI_SENSOR_ID deve corresponder a um SEN_ID existente
ON DELETE CASCADE;  -- Se SEN_ID for deletado, as leituras associadas também serão deletadas

-- Definindo a relação entre LEITURA_SENSOR e CULTURA, garantindo integridade referencial
ALTER TABLE LEITURA_SENSOR 
ADD CONSTRAINT FK_LEI_CULTURA_ID FOREIGN KEY (LEI_CULTURA_ID)
REFERENCES CULTURA (CUL_ID)  -- LEI_CULTURA_ID deve corresponder a um CUL_ID existente
ON DELETE CASCADE;

-- Criação da tabela AJUSTE_APLICACAO para armazenar os ajustes realizados na aplicação de água e nutrientes
CREATE TABLE AJUSTE_APLICACAO (
    AJU_ID NUMBER GENERATED BY DEFAULT ON NULL AS IDENTITY PRIMARY KEY,  -- Corrigido o comando de geração de IDENTITY para Oracle
    AJU_CULTURA_ID NUMBER NOT NULL,        -- Referência à cultura que recebeu o ajuste (chave estrangeira)
    AJU_DATA_HORA TIMESTAMP NOT NULL,      -- Data e hora do ajuste realizado
    AJU_QUANTIDADE_AGUA NUMBER NOT NULL,   -- Quantidade de água aplicada no ajuste (FLOAT trocado para NUMBER)
    AJU_QUANTIDADE_NUTRIENTES VARCHAR2(100) NOT NULL -- Quantidade de nutrientes aplicados no ajuste (Varcahr porque o ajuste de nutrientes NPK necessita ser vetorizado)
);

-- Definindo a relação entre AJUSTE_APLICACAO e CULTURA, garantindo integridade referencial
ALTER TABLE AJUSTE_APLICACAO 
ADD CONSTRAINT FK_AJU_CULTURA_ID FOREIGN KEY (AJU_CULTURA_ID)
REFERENCES CULTURA (CUL_ID)  
ON DELETE CASCADE;

-- Views para análise dos dados

-- View para calcular a quantidade total de água aplicada em cada mês
CREATE OR REPLACE VIEW VIEW_AJUSTE_APLICACAO_MENSAL AS
SELECT 
    EXTRACT(YEAR FROM AJU_DATA_HORA) AS Ano,
    EXTRACT(MONTH FROM AJU_DATA_HORA) AS Mes,
    SUM(AJU_QUANTIDADE_AGUA) AS Total_Agua
FROM 
    AJUSTE_APLICACAO
GROUP BY 
    EXTRACT(YEAR FROM AJU_DATA_HORA), EXTRACT(MONTH FROM AJU_DATA_HORA);

-- View para analisar as variações do nível de pH ao longo do ano
CREATE OR REPLACE VIEW VIEW_LEITURA_PH_ANUAL AS
SELECT 
    EXTRACT(YEAR FROM LEI_DATA_HORA) AS Ano,
    EXTRACT(MONTH FROM LEI_DATA_HORA) AS Mes,
    AVG(CASE WHEN S.SEN_TIPO = 'pH' THEN LEI_VALOR END) AS Media_PH
FROM 
    LEITURA_SENSOR L
JOIN 
    SENSOR S ON L.LEI_SENSOR_ID = S.SEN_ID
GROUP BY 
    EXTRACT(YEAR FROM LEI_DATA_HORA), EXTRACT(MONTH FROM LEI_DATA_HORA);

-- View para calcular a média de nutrientes aplicados por cultura
CREATE OR REPLACE VIEW VIEW_NUTRIENTES_APLICADOS AS
SELECT 
    C.CUL_NOME AS Cultura,
    AVG(AJU_QUANTIDADE_NUTRIENTES) AS Media_Nutrientes
FROM 
    AJUSTE_APLICACAO A
JOIN 
    CULTURA C ON A.AJU_CULTURA_ID = C.CUL_ID
GROUP BY 
    C.CUL_NOME;

-- View para verificar a aplicação de água e nutrientes em cada cultura
CREATE OR REPLACE VIEW VIEW_APLICACAO_AGUA_NUTRIENTES_CULTURA AS
SELECT 
    C.CUL_NOME AS Cultura,
    SUM(AJU_QUANTIDADE_AGUA) AS Total_Agua_Aplicada,
    SUM(AJU_QUANTIDADE_NUTRIENTES) AS Total_Nutrientes_Aplicados
FROM 
    AJUSTE_APLICACAO A
JOIN 
    CULTURA C ON A.AJU_CULTURA_ID = C.CUL_ID
GROUP BY 
    C.CUL_NOME;

-- View para analisar as leituras de umidade ao longo do tempo
CREATE OR REPLACE VIEW VIEW_LEITURAS_UMIDADE AS
SELECT 
    EXTRACT(YEAR FROM LEI_DATA_HORA) AS Ano,
    EXTRACT(MONTH FROM LEI_DATA_HORA) AS Mes,
    AVG(CASE WHEN S.SEN_TIPO = 'umidade' THEN LEI_VALOR END) AS Media_Umidade
FROM 
    LEITURA_SENSOR L
JOIN 
    SENSOR S ON L.LEI_SENSOR_ID = S.SEN_ID
GROUP BY 
    EXTRACT(YEAR FROM LEI_DATA_HORA), EXTRACT(MONTH FROM LEI_DATA_HORA);
