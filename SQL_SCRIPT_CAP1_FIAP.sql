-- Criação da tabela SENSOR para armazenar informações sobre os sensores utilizados nas plantações
CREATE TABLE SENSOR (
    SEN_ID NUMBER GENERATED BY DEFAULT ON NULL AS IDENTITY PRIMARY KEY,  -- Corrigido o comando de geração de IDENTITY para Oracle
    SEN_TIPO VARCHAR2(4000) NOT NULL,           -- Tipo de sensor (ex: umidade, pH, nutrientes)
    SEN_DESCRICAO VARCHAR2(4000) NOT NULL     -- Descrição do tipo de sensor
);

-- Criação da tabela CULTURA para armazenar informações sobre as diferentes culturas plantadas
CREATE TABLE CULTURA (
    CUL_ID NUMBER GENERATED BY DEFAULT ON NULL AS IDENTITY PRIMARY KEY,  -- Corrigido o comando de geração de IDENTITY para Oracle
    CUL_NOME VARCHAR2(4000) NOT NULL,          -- Nome da cultura (ex: milho, soja)
    CUL_UMIDADE_MIN NUMBER NOT NULL,         -- Umidade mínima ideal para a cultura (FLOAT trocado para NUMBER, mais adequado para Oracle)
    CUL_UMIDADE_MAX NUMBER NOT NULL,         -- Umidade máxima ideal para a cultura
    CUL_PH_MIN NUMBER NOT NULL,               -- pH mínimo ideal para a cultura
    CUL_PH_MAX NUMBER NOT NULL,               -- pH máximo ideal para a cultura
    CUL_N_MIN NUMBER NOT NULL,                -- Nível mínimo de nutrientes N necessários
    CUL_N_MAX NUMBER NOT NULL,                -- Nível máximo de nutrientes N necessários
    CUL_P_MIN NUMBER NOT NULL,                -- Nível mínimo de nutrientes P necessários
    CUL_P_MAX NUMBER NOT NULL,                -- Nível máximo de nutrientes P necessários
    CUL_K_MIN NUMBER NOT NULL,                -- Nível mínimo de nutrientes K necessários
    CUL_K_MAX NUMBER NOT NULL                 -- Nível máximo de nutrientes K necessários
);

-- Criação da tabela LEITURA_SENSOR para armazenar as leituras realizadas pelos sensores
CREATE TABLE LEITURA_SENSOR (
    LEI_ID NUMBER GENERATED BY DEFAULT ON NULL AS IDENTITY PRIMARY KEY,  -- Corrigido o comando de geração de IDENTITY para Oracle
    LEI_SENSOR_ID NUMBER NOT NULL,         -- Referência ao sensor que fez a leitura (chave estrangeira)
    LEI_CULTURA_ID NUMBER NOT NULL,        -- Referência à cultura relacionada à leitura (chave estrangeira)
    LEI_DATA_HORA TIMESTAMP NOT NULL,      -- Data e hora da leitura do sensor
    LEI_VALOR VARCHAR2(100) NOT NULL       -- Valor da leitura (Varchar porque a leitura do sensor NPK necessita ser vetorizada)
);

-- Definindo a relação entre LEITURA_SENSOR e SENSOR, garantindo integridade referencial
ALTER TABLE LEITURA_SENSOR
ADD CONSTRAINT FK_LEI_SENSOR_ID FOREIGN KEY (LEI_SENSOR_ID)
REFERENCES SENSOR (SEN_ID)  -- LEI_SENSOR_ID deve corresponder a um SEN_ID existente
ON DELETE CASCADE;  -- Se SEN_ID for deletado, as leituras associadas também serão deletadas

-- Definindo a relação entre LEITURA_SENSOR e CULTURA, garantindo integridade referencial
ALTER TABLE LEITURA_SENSOR
ADD CONSTRAINT FK_LEI_CULTURA_ID FOREIGN KEY (LEI_CULTURA_ID)
REFERENCES CULTURA (CUL_ID)  -- LEI_CULTURA_ID deve corresponder a um CUL_ID existente
ON DELETE CASCADE;

-- Criação da tabela AJUSTE_APLICACAO para armazenar os ajustes realizados na aplicação de água e nutrientes
CREATE TABLE AJUSTE_APLICACAO (
    AJU_ID NUMBER GENERATED BY DEFAULT ON NULL AS IDENTITY PRIMARY KEY,  -- Corrigido o comando de geração de IDENTITY para Oracle
    AJU_CULTURA_ID NUMBER NOT NULL,        -- Referência à cultura que recebeu o ajuste (chave estrangeira)
    AJU_DATA_HORA TIMESTAMP NOT NULL,      -- Data e hora do ajuste realizado
    AJU_QUANTIDADE_AGUA NUMBER NOT NULL,   -- Quantidade de água aplicada no ajuste (FLOAT trocado para NUMBER)
    AJU_QUANTIDADE_NUTRIENTES VARCHAR2(100) NOT NULL -- Quantidade de nutrientes aplicados no ajuste (Varcahr porque o ajuste de nutrientes NPK necessita ser vetorizado)
);

-- Definindo a relação entre AJUSTE_APLICACAO e CULTURA, garantindo integridade referencial
ALTER TABLE AJUSTE_APLICACAO
ADD CONSTRAINT FK_AJU_CULTURA_ID FOREIGN KEY (AJU_CULTURA_ID)
REFERENCES CULTURA (CUL_ID)
ON DELETE CASCADE;

-- INSERÇÃO DE DADOS
-- TABELA CULTURA
INSERT INTO ADMIN.CULTURA VALUES (1,'Milho',0.6,0.8,5.8,7,25,60,10,25,100,200);
INSERT INTO ADMIN.CULTURA VALUES (2,'Alface',0.7,0.9,7,9,50,120,10,30,100,250);
INSERT INTO ADMIN.CULTURA VALUES (3,'Tomate',0.6,0.8,6,6.8,50,120,20,40,150,300);

-- TABELA SENSOR
INSERT INTO ADMIN.SENSOR VALUES (1,'Umidade','% da Capacidade de Campo( quantiade máxima de água que o solo pode reter após um período de drenagem)');
INSERT INTO ADMIN.SENSOR VALUES (2,'PH','Variaçao PH');
INSERT INTO ADMIN.SENSOR VALUES (3,'Nutrientes(NPK)','Valor em Mg/Kg do Nitrogenio(N), Fósforo(P), Potássio(K)');

-- TABELA LEITURA_SENSOR
INSERT INTO ADMIN.LEITURA_SENSOR VALUES (1,1,1,TO_TIMESTAMP ('2024-10-07 08:30', 'YYYY-MM-DD HH24:MI:SS'),'0.65');
INSERT INTO ADMIN.LEITURA_SENSOR VALUES (2,2,1,TO_TIMESTAMP ('2024-10-07 08:30', 'YYYY-MM-DD HH24:MI:SS'),'6.5');
INSERT INTO ADMIN.LEITURA_SENSOR VALUES (3,3,1,TO_TIMESTAMP ('2024-10-07 08:30', 'YYYY-MM-DD HH24:MI:SS'),'37,15,150');
INSERT INTO ADMIN.LEITURA_SENSOR VALUES (4,1,2,TO_TIMESTAMP ('2024-10-07 08:30', 'YYYY-MM-DD HH24:MI:SS'),'0.78');
INSERT INTO ADMIN.LEITURA_SENSOR VALUES (5,2,2,TO_TIMESTAMP ('2024-10-07 08:30', 'YYYY-MM-DD HH24:MI:SS'),'6.4');
INSERT INTO ADMIN.LEITURA_SENSOR VALUES (6,3,2,TO_TIMESTAMP ('2024-10-07 08:30', 'YYYY-MM-DD HH24:MI:SS'),'80,20,180');
INSERT INTO ADMIN.LEITURA_SENSOR VALUES (7,1,3,TO_TIMESTAMP ('2024-10-07 08:30', 'YYYY-MM-DD HH24:MI:SS'),'0.66');
INSERT INTO ADMIN.LEITURA_SENSOR VALUES (8,2,3,TO_TIMESTAMP ('2024-10-07 08:30', 'YYYY-MM-DD HH24:MI:SS'),'6.2');
INSERT INTO ADMIN.LEITURA_SENSOR VALUES (9,3,3,TO_TIMESTAMP ('2024-10-07 08:30', 'YYYY-MM-DD HH24:MI:SS'),'100,30,250');
INSERT INTO ADMIN.LEITURA_SENSOR VALUES (10,1,1,TO_TIMESTAMP ('2024-10-07 15:00', 'YYYY-MM-DD HH24:MI:SS'),'0.73');
INSERT INTO ADMIN.LEITURA_SENSOR VALUES (11,2,1,TO_TIMESTAMP ('2024-10-07 15:00', 'YYYY-MM-DD HH24:MI:SS'),'6.3');
INSERT INTO ADMIN.LEITURA_SENSOR VALUES (12,3,1,TO_TIMESTAMP ('2024-10-07 15:00', 'YYYY-MM-DD HH24:MI:SS'),'43,18,165');
INSERT INTO ADMIN.LEITURA_SENSOR VALUES (13,1,2,TO_TIMESTAMP ('2024-10-07 15:00', 'YYYY-MM-DD HH24:MI:SS'),'0.84');
INSERT INTO ADMIN.LEITURA_SENSOR VALUES (14,2,2,TO_TIMESTAMP ('2024-10-07 15:00', 'YYYY-MM-DD HH24:MI:SS'),'6.4');
INSERT INTO ADMIN.LEITURA_SENSOR VALUES (15,3,2,TO_TIMESTAMP ('2024-10-07 15:00', 'YYYY-MM-DD HH24:MI:SS'),'110,26,205');
INSERT INTO ADMIN.LEITURA_SENSOR VALUES (16,1,3,TO_TIMESTAMP ('2024-10-07 15:00', 'YYYY-MM-DD HH24:MI:SS'),'0.71');
INSERT INTO ADMIN.LEITURA_SENSOR VALUES (17,2,3,TO_TIMESTAMP ('2024-10-07 15:00', 'YYYY-MM-DD HH24:MI:SS'),'6.2');
INSERT INTO ADMIN.LEITURA_SENSOR VALUES (18,3,3,TO_TIMESTAMP ('2024-10-07 15:00', 'YYYY-MM-DD HH24:MI:SS'),'100,35,272');
INSERT INTO ADMIN.LEITURA_SENSOR VALUES (19,1,1,TO_TIMESTAMP ('2024-10-08 08:30', 'YYYY-MM-DD HH24:MI:SS'),'0.62');
INSERT INTO ADMIN.LEITURA_SENSOR VALUES (20,2,1,TO_TIMESTAMP ('2024-10-08 08:30', 'YYYY-MM-DD HH24:MI:SS'),'6.4');
INSERT INTO ADMIN.LEITURA_SENSOR VALUES (21,3,1,TO_TIMESTAMP ('2024-10-08 08:30', 'YYYY-MM-DD HH24:MI:SS'),'39,16,143');
INSERT INTO ADMIN.LEITURA_SENSOR VALUES (22,1,2,TO_TIMESTAMP ('2024-10-08 08:30', 'YYYY-MM-DD HH24:MI:SS'),'0.8');
INSERT INTO ADMIN.LEITURA_SENSOR VALUES (23,2,2,TO_TIMESTAMP ('2024-10-08 08:30', 'YYYY-MM-DD HH24:MI:SS'),'6.5');
INSERT INTO ADMIN.LEITURA_SENSOR VALUES (24,3,2,TO_TIMESTAMP ('2024-10-08 08:30', 'YYYY-MM-DD HH24:MI:SS'),'81.5,19,168');
INSERT INTO ADMIN.LEITURA_SENSOR VALUES (25,1,3,TO_TIMESTAMP ('2024-10-08 08:30', 'YYYY-MM-DD HH24:MI:SS'),'0.65');
INSERT INTO ADMIN.LEITURA_SENSOR VALUES (26,2,3,TO_TIMESTAMP ('2024-10-08 08:30', 'YYYY-MM-DD HH24:MI:SS'),'6.3');
INSERT INTO ADMIN.LEITURA_SENSOR VALUES (27,3,3,TO_TIMESTAMP ('2024-10-08 08:30', 'YYYY-MM-DD HH24:MI:SS'),'102.5,31,247');
INSERT INTO ADMIN.LEITURA_SENSOR VALUES (28,1,1,TO_TIMESTAMP ('2024-10-08 15:00', 'YYYY-MM-DD HH24:MI:SS'),'0.75');
INSERT INTO ADMIN.LEITURA_SENSOR VALUES (29,2,1,TO_TIMESTAMP ('2024-10-08 15:00', 'YYYY-MM-DD HH24:MI:SS'),'6');
INSERT INTO ADMIN.LEITURA_SENSOR VALUES (30,3,1,TO_TIMESTAMP ('2024-10-08 15:00', 'YYYY-MM-DD HH24:MI:SS'),'41,20.5,162');
INSERT INTO ADMIN.LEITURA_SENSOR VALUES (31,1,2,TO_TIMESTAMP ('2024-10-08 15:00', 'YYYY-MM-DD HH24:MI:SS'),'0.84');
INSERT INTO ADMIN.LEITURA_SENSOR VALUES (32,2,2,TO_TIMESTAMP ('2024-10-08 15:00', 'YYYY-MM-DD HH24:MI:SS'),'6.5');
INSERT INTO ADMIN.LEITURA_SENSOR VALUES (33,3,2,TO_TIMESTAMP ('2024-10-08 15:00', 'YYYY-MM-DD HH24:MI:SS'),'100,27.5,210');
INSERT INTO ADMIN.LEITURA_SENSOR VALUES (34,1,3,TO_TIMESTAMP ('2024-10-08 15:00', 'YYYY-MM-DD HH24:MI:SS'),'0.73');
INSERT INTO ADMIN.LEITURA_SENSOR VALUES (35,2,3,TO_TIMESTAMP ('2024-10-08 15:00', 'YYYY-MM-DD HH24:MI:SS'),'6.2');
INSERT INTO ADMIN.LEITURA_SENSOR VALUES (36,3,3,TO_TIMESTAMP ('2024-10-08 15:00', 'YYYY-MM-DD HH24:MI:SS'),'105,37,268');

-- TABELA AJUSTE_APLICACAO
INSERT INTO ADMIN.AJUSTE_APLICACAO VALUES (1,1,TO_TIMESTAMP ('2024-10-08 08:30', 'YYYY-MM-DD HH24:MI:SS'),108333,'960,1800,3200');
INSERT INTO ADMIN.AJUSTE_APLICACAO VALUES (2,2,TO_TIMESTAMP ('2024-10-08 08:30', 'YYYY-MM-DD HH24:MI:SS'),39000000,'510,975,1300');
INSERT INTO ADMIN.AJUSTE_APLICACAO VALUES (3,3,TO_TIMESTAMP ('2024-10-08 08:30', 'YYYY-MM-DD HH24:MI:SS'),933333,'750,1920,4000');
INSERT INTO ADMIN.AJUSTE_APLICACAO VALUES (4,1,TO_TIMESTAMP ('2024-10-08 08:30', 'YYYY-MM-DD HH24:MI:SS'),108333,'1280,0,0');
INSERT INTO ADMIN.AJUSTE_APLICACAO VALUES (5,2,TO_TIMESTAMP ('2024-10-08 15:00', 'YYYY-MM-DD HH24:MI:SS'),39000000,'680,0,0');
INSERT INTO ADMIN.AJUSTE_APLICACAO VALUES (6,3,TO_TIMESTAMP ('2024-10-08 15:00', 'YYYY-MM-DD HH24:MI:SS'),933333,'1000,0,0');
INSERT INTO ADMIN.AJUSTE_APLICACAO VALUES (7,1,TO_TIMESTAMP ('2024-10-08 15:00', 'YYYY-MM-DD HH24:MI:SS'),108333,'960,0,0');
INSERT INTO ADMIN.AJUSTE_APLICACAO VALUES (8,2,TO_TIMESTAMP ('2024-10-08 15:00', 'YYYY-MM-DD HH24:MI:SS'),39000000,'510,0,0');
INSERT INTO ADMIN.AJUSTE_APLICACAO VALUES (9,3,TO_TIMESTAMP ('2024-10-08 15:00', 'YYYY-MM-DD HH24:MI:SS'),933333,'750,0,0');

-- Views para análise dos dados
-- View para calcular a quantidade total de água aplicada em cada mês
CREATE OR REPLACE VIEW VIEW_AJUSTE_APLICACAO_AGUA_MENSAL AS
SELECT
    EXTRACT(YEAR FROM AJU_DATA_HORA) AS Ano,
    EXTRACT(MONTH FROM AJU_DATA_HORA) AS Mes,
    SUM(AJU_QUANTIDADE_AGUA) AS Total_Agua
FROM
    AJUSTE_APLICACAO
GROUP BY
    EXTRACT(YEAR FROM AJU_DATA_HORA), EXTRACT(MONTH FROM AJU_DATA_HORA);

-- View para analisar a média dos nívis de pH, Umidade, Nitrogenio, Fosforo e Potassio por Tipo Cultura
CREATE OR REPLACE VIEW VIEW_LEITURA_NPK_PH_UMIDADE_CULTURA_ANUAL AS
SELECT
    C.CUL_NOME AS Cultura,  -- Nome da Cultura
    EXTRACT(YEAR FROM L.LEI_DATA_HORA) AS Ano,
    EXTRACT(MONTH FROM L.LEI_DATA_HORA) AS Mes,
    AVG(CASE WHEN S.SEN_TIPO = 'PH' THEN TO_NUMBER(L.LEI_VALOR) END) AS Media_PH,
    AVG(CASE WHEN S.SEN_TIPO = 'Umidade' THEN TO_NUMBER(L.LEI_VALOR) * 100 END) AS Media_Umidade,
    -- Média de Nitrogênio (N), extraído da primeira posição da string de nutrientes
    AVG(CASE
            WHEN S.SEN_TIPO = 'Nutrientes(NPK)' THEN
                TO_NUMBER(REGEXP_SUBSTR(L.LEI_VALOR, '[^,]+', 1, 1))
        END) AS Media_Nitrogenio,
    -- Média de Fósforo (P), extraído da segunda posição da string de nutrientes
    AVG(CASE
            WHEN S.SEN_TIPO = 'Nutrientes(NPK)' THEN
                TO_NUMBER(REGEXP_SUBSTR(L.LEI_VALOR, '[^,]+', 1, 2))
        END) AS Media_Fosforo,
    -- Média de Potássio (K), extraído da terceira posição da string de nutrientes
    AVG(CASE
            WHEN S.SEN_TIPO = 'Nutrientes(NPK)' THEN
                TO_NUMBER(REGEXP_SUBSTR(L.LEI_VALOR, '[^,]+', 1, 3))
        END) AS Media_Potassio
FROM
    LEITURA_SENSOR L
JOIN
    SENSOR S ON L.LEI_SENSOR_ID = S.SEN_ID
JOIN
    CULTURA C ON L.LEI_CULTURA_ID = C.CUL_ID  -- Relaciona com a tabela CULTURA para obter o nome da cultura
GROUP BY
    C.CUL_NOME,  -- Agrupar pelo nome da cultura
    EXTRACT(YEAR FROM L.LEI_DATA_HORA),
    EXTRACT(MONTH FROM L.LEI_DATA_HORA);


-- View para visualizar o histórico individualizado de ajuste de agua e nutrientes
CREATE OR REPLACE VIEW VIEW_AJUSTE_APLICACAO_NUTRIENTES AS
SELECT
    A.AJU_ID,
    C.CUL_NOME AS Cultura,
    A.AJU_DATA_HORA,
    A.AJU_QUANTIDADE_AGUA,
    -- Extraindo o valor de Nitrogênio (N), que é o primeiro valor na string
    REGEXP_SUBSTR(A.AJU_QUANTIDADE_NUTRIENTES, '[^,]+', 1, 1) AS Nitrogenio,
    -- Extraindo o valor de Fósforo (P), que é o segundo valor na string
    REGEXP_SUBSTR(A.AJU_QUANTIDADE_NUTRIENTES, '[^,]+', 1, 2) AS Fosforo,
    -- Extraindo o valor de Potássio (K), que é o terceiro valor na string
    REGEXP_SUBSTR(A.AJU_QUANTIDADE_NUTRIENTES, '[^,]+', 1, 3) AS Potassio
FROM
    AJUSTE_APLICACAO A
JOIN
    CULTURA C ON A.AJU_CULTURA_ID = C.CUL_ID
ORDER BY
    A.AJU_ID;

-- View para verificar se a média das variaveis estão dentro dos padrões esperados para cada tipo de cultura
CREATE OR REPLACE VIEW VIEW_CLASSIFICACAO_NPK_PH_UMIDADE_CULTURA_ANUAL AS
SELECT
    C.CUL_NOME AS Cultura,
    L.Ano,
    L.Mes,

    -- Classificação do pH
    CASE
        WHEN L.Media_PH < C.CUL_PH_MIN THEN 'BAIXO'
        WHEN L.Media_PH > C.CUL_PH_MAX THEN 'ALTO'
        ELSE 'REGULAR'
    END AS Classificacao_PH,

    -- Classificação da Umidade
    CASE
        WHEN L.Media_Umidade < C.CUL_UMIDADE_MIN THEN 'BAIXO'
        WHEN L.Media_Umidade > C.CUL_UMIDADE_MAX THEN 'ALTO'
        ELSE 'REGULAR'
    END AS Classificacao_Umidade,

    -- Classificação do Nitrogênio
    CASE
        WHEN L.Media_Nitrogenio < C.CUL_N_MIN THEN 'BAIXO'
        WHEN L.Media_Nitrogenio > C.CUL_N_MAX THEN 'ALTO'
        ELSE 'REGULAR'
    END AS Classificacao_Nitrogenio,

    -- Classificação do Fósforo
    CASE
        WHEN L.Media_Fosforo < C.CUL_P_MIN THEN 'BAIXO'
        WHEN L.Media_Fosforo > C.CUL_P_MAX THEN 'ALTO'
        ELSE 'REGULAR'
    END AS Classificacao_Fosforo,

    -- Classificação do Potássio
    CASE
        WHEN L.Media_Potassio < C.CUL_K_MIN THEN 'BAIXO'
        WHEN L.Media_Potassio > C.CUL_K_MAX THEN 'ALTO'
        ELSE 'REGULAR'
    END AS Classificacao_Potassio

FROM
    VIEW_LEITURA_NPK_PH_UMIDADE_CULTURA_ANUAL L
JOIN
    CULTURA C ON L.Cultura = C.CUL_NOME  -- Relaciona o nome da cultura com a tabela CULTURA
ORDER BY
    L.Ano, L.Mes, C.CUL_NOME;